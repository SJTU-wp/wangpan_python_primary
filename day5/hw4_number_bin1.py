# 统计一个整数对应的二进制数的1的个数

n = int(input("请输入一个整数："))
i = 0  # 记录二进制数中1的个数
j = 0  # 计数，当前已遍历位数
temp = n

while temp != 0 and j < 64:
    i = i + (temp & 1)  # 注意加减运算优先级先于<<、>>、&
    temp >>= 1
    j += 1

print("整数 %d 的二进制包含1的个数为：%d" % (n, i))

# -1右移一位依然是-1，不断进入死循环
# n & (n-1) 可以清除掉n二进制数中位于最右边的1，负数如何满足待验证

# 失败案例
# if n >= 0:
#     print("整数 %d 转换为二进制是：%s" % (n, bin(n)))
#     temp = n
# else:
#     print("整数 %d 转换为二进制是：%s" % (n, bin(~(-n-1))))
#     temp = ~(-n-1)
#
# while temp != 0:
#     if temp % 2 == 1:
#         i += 1
#     temp //= 2
#
# print("整数 %d 的二进制包含1的个数为：%d" % (n, i))


